"use strict";(self.webpackChunkliuxing95_github_io=self.webpackChunkliuxing95_github_io||[]).push([[347],{3905:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>f});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=t.createContext({}),m=function(e){var r=t.useContext(i),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},p=function(e){var r=m(e.components);return t.createElement(i.Provider,{value:r},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=m(n),d=a,f=u["".concat(i,".").concat(d)]||u[d]||c[d]||o;return n?t.createElement(f,s(s({ref:r},p),{},{components:n})):t.createElement(f,s({ref:r},p))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l[u]="string"==typeof e?e:a,s[1]=l;for(var m=2;m<o;m++)s[m]=n[m];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8351:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var t=n(7462),a=(n(7294),n(3905));const o={title:"2023.2.8",sidebar_position:0},s="Umi-test \u8c03\u7814",l={unversionedId:"2023.2/2023.2.8",id:"2023.2/2023.2.8",title:"2023.2.8",description:"umi2 \u672c\u8eab\u63d0\u4f9b\u4e86\u4e00\u4e2a umi-test \u7684\u5e93",source:"@site/docs/2023.2/2023.2.8.md",sourceDirName:"2023.2",slug:"/2023.2/2023.2.8",permalink:"/docs/2023.2/2023.2.8",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/2023.2/2023.2.8.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"2023.2.8",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"2023.1.31",permalink:"/docs/2023.1/2023.1.31"},next:{title:"2023.2.9",permalink:"/docs/2023.2/2023.2.9"}},i={},m=[{value:"Transformer",id:"transformer",level:2},{value:"fileTransformer",id:"filetransformer",level:3},{value:"jsTransformer",id:"jstransformer",level:3},{value:"tsTransformer",id:"tstransformer",level:3},{value:"moduleNameMapper",id:"modulenamemapper",level:2},{value:"fileMock",id:"filemock",level:3},{value:"setupFiles",id:"setupfiles",level:2},{value:"shim.js",id:"shimjs",level:3},{value:"setupTests",id:"setuptests",level:3}],p={toc:m},u="wrapper";function c(e){let{components:r,...n}=e;return(0,a.kt)(u,(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"umi-test-\u8c03\u7814"},"Umi-test \u8c03\u7814"),(0,a.kt)("p",null,"umi2 \u672c\u8eab\u63d0\u4f9b\u4e86\u4e00\u4e2a umi-test \u7684\u5e93\n",(0,a.kt)("img",{parentName:"p",src:"https://cdn.nlark.com/yuque/0/2023/jpeg/281817/1675828222123-0f2f82f1-4099-4037-a239-057be0cd0ac3.jpeg",alt:null})),(0,a.kt)("h2",{id:"transformer"},"Transformer"),(0,a.kt)("h3",{id:"filetransformer"},"fileTransformer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},"const path = require('path');\n\nmodule.exports = {\n  process(src, filename) {\n    const assetFilename = JSON.stringify(path.basename(filename));\n\n    if (filename.match(/\\.svg$/)) {\n      return `module.exports = {\n        __esModule: true,\n        default: ${assetFilename},\n        ReactComponent: ({ svgRef, ...props }) => ({\n          $$typeof: Symbol.for('react.element'),\n          type: 'svg',\n          ref: svgRef || null,\n          key: null,\n          props: Object.assign({}, props, {\n            children: ${assetFilename}\n          })\n        }),\n      };`;\n    }\n\n    return `module.exports = ${assetFilename};`;\n  },\n};\n\n")),(0,a.kt)("h3",{id:"jstransformer"},"jsTransformer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},"import babelJest from 'babel-jest';\nimport { dirname } from 'path';\n\nmodule.exports = babelJest.createTransformer({\n  presets: [\n    [\n      require.resolve('babel-preset-umi'),\n      {\n        transformRuntime: false,\n      },\n    ],\n  ],\n  plugins: [\n    [\n      require.resolve('babel-plugin-module-resolver'),\n      {\n        alias: {\n          'ts-jest': require.resolve('ts-jest'),\n          react: dirname(require.resolve('react/package')),\n          'react-dom': dirname(require.resolve('react-dom/package')),\n          enzyme: require.resolve('enzyme'),\n        },\n      },\n      'module-resolver-in-umi-test',\n    ],\n  ],\n});\n\n")),(0,a.kt)("h3",{id:"tstransformer"},"tsTransformer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},"import { createTransformer } from 'ts-jest';\n\nmodule.exports = { createTransformer };\n\n")),(0,a.kt)("h2",{id:"modulenamemapper"},"moduleNameMapper"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},"moduleNameMapper: {\n  '\\\\.(css|less|sass|scss)$': require.resolve('identity-obj-proxy'),\n  '\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$': require.resolve(\n    './fileMock.js',\n  ),\n  ...(moduleNameMapper || {}),\n  ...(userModuleNameMapper || {}),\n},\n")),(0,a.kt)("h3",{id:"filemock"},"fileMock"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"use strict";\n\nmodule.exports = {};\n\n')),(0,a.kt)("h2",{id:"setupfiles"},"setupFiles"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},"setupFiles: [\n  require.resolve('./shim.js'),\n  require.resolve('./setupTests.js'),\n],\n")),(0,a.kt)("h3",{id:"shimjs"},"shim.js"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},"import '@babel/polyfill';\n\n/* eslint-disable import/first */\nglobal.requestAnimationFrame =\n  global.requestAnimationFrame ||\n  function requestAnimationFrame(callback) {\n    setTimeout(callback, 0);\n  };\n\n")),(0,a.kt)("h3",{id:"setuptests"},"setupTests"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},"import { JSDOM } from 'jsdom';\nimport Enzyme from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\nEnzyme.configure({ adapter: new Adapter() });\n\n// fixed jsdom miss\nconst documentHTML =\n  '<!doctype html><html><body><div id=\"root\"></div></body></html>';\nconst dom = new JSDOM(documentHTML);\nglobal.window = dom.window;\nglobal.document = dom.window.document;\nglobal.navigator = global.window.navigator;\n\n")))}c.isMDXComponent=!0}}]);